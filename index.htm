<!DOCTYPE html>
<html>

<head>

  <meta charset="utf-8">
  <title>My First Map Markers</title>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
  <link href="https://api.mapbox.com/mapbox-gl-js/v3.15.0/mapbox-gl.css" rel="stylesheet">
  <script src="https://api.mapbox.com/mapbox-gl-js/v3.15.0/mapbox-gl.js"></script>
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
    
    /* New CSS for images in popups */
    .popup-img {
      max-width: 250px;
      height: auto;
      margin: 5px 0;
      border-radius: 4px;
    }
  </style>
</head>

<body>
  <div id="map"></div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiZG9tbGV0IiwiYSI6ImNsanp3a24xeDAxMjMzZGxpeDY3MWZpMXkifQ.4TIVDbum8xmIdzokCod3Ww';
    const map = new mapboxgl.Map({
      container: 'map',
      // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
      style: 'mapbox://styles/rdr-22/cmgfnvss9002401rbdle5fk8v',
      center: [-122.2436957134924,37.81078354778325],
      zoom: 10
    });

    map.on('load', () => {
      map.addSource('my-places', {
        'type': 'geojson',
        'data': {
          'type': 'FeatureCollection',
          'features': [
            {
              'type': 'Feature',
              'geometry': {
                'type': 'Point',
                'coordinates': [-122.2436957134924,37.81078354778325],
              },
              "properties": {
                'name': "Colonel's Donuts, Amazingly tasty.",
                'description': "I love the donuts from here",
                'image': 'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/13/b4/6d/ac/front-entrance.jpg?w=900&h=500&s=1'
              }
            },
            {
              'type': 'Feature',
              'geometry': {
                'type': 'Point',
                'coordinates': [-122.1656,37.7896],
              },
              "properties": {
                'name': "EMT COLLEGE CLASS WAS HERE",
                'description': "We had a great time learning about EMT",
                'image': 'https://www.peralta.edu/hs-fs/hubfs/4Merritt.jpg?width=3600&height=2400&name=4Merritt.jpg'
              }
            },
            {
              'type': 'Feature',
              'geometry': {
                'type': 'Point',
                'coordinates': [-122.3106, 41.3095],
              },
              "properties": {
                'name': "Mt. Shasta",
                'description': "In My restless dreams, I see that mountain in the sky",
                'image': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/MtShasta_aerial.JPG/1200px-MtShasta_aerial.JPG'
              }
            },
            // NEW FEATURE ADDED
            {
              'type': 'Feature',
              'geometry': {
                'type': 'Point',
                'coordinates': [-122.4194, 37.7749],
              },
              "properties": {
                'name': "San Francisco",
                'description': "The Golden Gate City with beautiful views and culture",
                'image': 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/San_Francisco_from_the_Marin_Headlands_in_March_2019.jpg/1200px-San_Francisco_from_the_Marin_Headlands_in_March_2019.jpg'
              }
            }
          ]
        }
      });

      map.addLayer({
        'id': 'my-places',
        'type': 'circle',
        'source': 'my-places',
        'paint': {
          'circle-radius': 6,
          'circle-color': '#B42222'
        },
        'filter': ['==', '$type', 'Point']
      });
    });

    // Updated interaction with image support
    map.on('click', 'my-places', (e) => {
      // Copy coordinates array.
      const coordinates = e.features[0].geometry.coordinates.slice();
      const name = e.features[0].properties.name;
      const description = e.features[0].properties.description;
      const image = e.features[0].properties.image;
      
      // Ensure that if the map is zoomed out such that multiple
      // copies of the feature are visible, the popup appears
      // over the copy being pointed to.
      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
      }
      
      // Create popup content with image
      let popupContent = `<strong>${name}</strong><br/>${description}`;
      if (image) {
        popupContent = `<img src="${image}" class="popup-img" alt="${name}"><br/>${popupContent}`;
      }

      new mapboxgl.Popup()
        .setLngLat(coordinates)
        .setHTML(popupContent)
        .addTo(map);
    });

    // Change the cursor to a pointer when the mouse is over the places layer.
    map.on('mouseenter', 'my-places', () => {
      map.getCanvas().style.cursor = 'pointer';
    });

    // Change it back to a pointer when it leaves.
    map.on('mouseleave', 'my-places', () => {
      map.getCanvas().style.cursor = '';
    });
  </script>

</body>

</html>